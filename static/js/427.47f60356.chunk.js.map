{"version":3,"file":"static/js/427.47f60356.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/Contact/Contact.module.css?03fd","components/Contact/Contact.js","redux/selectors.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactsFilter/ContactsFilter.module.css?d01d","components/ContactsFilter/ContactsFilter.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.js","webpack://goit-react-hw-08-phonebook/./src/components/Modal/Modal.module.css?28d7","components/Modal/Modal.js","pages/Tasks.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Contact_wrapper__K-zLN\",\"textWrapper\":\"Contact_textWrapper__cL9YZ\",\"text\":\"Contact_text__Wq-3f\",\"name\":\"Contact_name__xbxVU\",\"number\":\"Contact_number__aT6T9\",\"btn\":\"Contact_btn__JzanX\",\"btnTel\":\"Contact_btnTel__FU5zE\",\"animate__animated\":\"Contact_animate__animated__MBpZ8\",\"animate__bounceInUp\":\"Contact_animate__bounceInUp__Kk3+o\",\"bounceInUp\":\"Contact_bounceInUp__YmUwJ\"};","import { useDispatch } from 'react-redux';\nimport { MdClose, MdPhone } from 'react-icons/md';\nimport { deleteContact } from 'redux/operations';\nimport css from './Contact.module.css';\n\nexport const Contact = ({ contact }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => dispatch(deleteContact(contact.id));\n\n  const tel = contact.number;\n  return (\n    <div\n      className={`${css.wrapper} ${css.animate__animated} ${css.animate__bounceInUp}`}\n    >\n      <div className={css.textWrapper}>\n        <p className={css.text}>\n          <span className={css.name}>{contact.name}: </span>\n          <span className={css.number}>{contact.number}</span>\n        </p>\n      </div>\n      <button className={`${css.btn} ${css.btnTel}`}>\n        <a href={`tel:${tel}`}>\n          <MdPhone fill=\"#01c801\" size={18} />\n        </a>\n      </button>\n\n      <button className={css.btn} onClick={handleDelete}>\n        <MdClose size={24} />\n      </button>\n    </div>\n  );\n};\n","export const getContacts = state => state.contacts.items;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n\nexport const getFilters = state => state.filters;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"ContactsFilter_wrapper__90o0z\",\"inputFilter\":\"ContactsFilter_inputFilter__5uxnJ\",\"searchImg\":\"ContactsFilter_searchImg__lQefW\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/filtersSlice';\nimport { getFilters } from 'redux/selectors';\n\nimport { MdSearch } from 'react-icons/md';\n\nimport css from './ContactsFilter.module.css';\n\nexport const ContactsFilter = () => {\n  const { filters } = useSelector(getFilters);\n\n  const dispatch = useDispatch();\n\n  const handleFilterChange = event => {\n    const filterInput = event.target;\n    dispatch(setFilter(filterInput.value));\n  };\n\n  return (\n    <div className={css.wrapper}>\n      <input\n        type=\"text\"\n        className={css.inputFilter}\n        name=\"filter\"\n        value={filters}\n        placeholder=\"Find contacts by name\"\n        onChange={handleFilterChange}\n        required\n      />\n\n      <div className={css.searchImg}>\n        <MdSearch size={16} fill=\"#010101\" />\n      </div>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"countInfo\":\"ContactList_countInfo__BJL6D\",\"contactSum\":\"ContactList_contactSum__vdt5Q\",\"contactSumValue\":\"ContactList_contactSumValue__0RRj-\",\"text\":\"ContactList_text__+NWAW\",\"section\":\"ContactList_section__NXNYw\",\"wrapperBtn\":\"ContactList_wrapperBtn__75Vj-\"};","import PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { Contact } from 'components/Contact/Contact';\nimport { getContacts, getFilters, getIsLoading } from 'redux/selectors';\nimport { ContactsFilter } from 'components/ContactsFilter/ContactsFilter.js';\nimport { MdPersonAdd } from 'react-icons/md';\nimport { Button } from 'components/Button/Button';\n\nimport css from './ContactList.module.css';\n\nconst getFiltredContacts = (contacts, filters) => {\n  const normalizeFilter = filters.toLowerCase();\n  return contacts\n    .filter(contact => contact.name.toLowerCase().includes(normalizeFilter))\n    .sort((firstContact, secondContact) =>\n      firstContact.name.localeCompare(secondContact.name)\n    );\n};\n\nexport const ContactList = ({ onOpen }) => {\n  const isLoading = useSelector(getIsLoading);\n  const contacts = useSelector(getContacts);\n  const { filters } = useSelector(getFilters);\n\n  const visibleContacts = getFiltredContacts(contacts, filters);\n\n  return (\n    <>\n      <div className={css.countInfo}>\n        <p className={css.contactSum}>\n          all contacts:\n          <span className={css.contactSumValue}>{contacts.length}</span>\n        </p>\n\n        <section className={css.section}>\n          <div className={css.wrapperBtn}>\n            <ContactsFilter />\n            <Button onClick={() => onOpen()}>\n              <MdPersonAdd size={16} />\n            </Button>\n          </div>\n        </section>\n      </div>\n\n      {contacts.length === 0 && !isLoading ? (\n        <p className={css.text}>\n          The contact list is empty, please add a contact !\n        </p>\n      ) : (\n        <ul className={css.list}>\n          {visibleContacts.map(contact => (\n            <li key={contact.id}>\n              <Contact contact={contact} />\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nContactList.propTypes = {\n  onOpen: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"field\":\"ContactForm_field__DAXEv\",\"title\":\"ContactForm_title__jZguf\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from 'redux/selectors';\nimport { Button } from 'components/Button/Button';\nimport { addContact } from 'redux/operations';\nimport css from './ContactForm.module.css';\n\nexport const ContactForm = () => {\n  const contacts = useSelector(getContacts);\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.target;\n    if (contacts.some(value => value.name === form.elements.name.value)) {\n      alert(`\"${form.elements.name.value}\" is already in contacts`);\n    } else if (form.elements.number.value === '') {\n      alert('Please enter phone number !');\n    } else {\n      dispatch(\n        addContact({\n          name: form.elements.name.value,\n          number: form.elements.number.value,\n        })\n      );\n    }\n\n    form.reset();\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <input\n        className={css.field}\n        type=\"text\"\n        name=\"name\"\n        placeholder=\"Enter name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n      />\n      <input\n        className={css.field}\n        type=\"tel\"\n        name=\"number\"\n        placeholder=\"Enter phone number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n      />\n      <Button type=\"submit\">Add contact</Button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"Overlay\":\"Modal_Overlay__yoxbg\",\"Modal\":\"Modal_Modal__I1UYJ\",\"animate__animated\":\"Modal_animate__animated__MOpmp\",\"animate__bounceInUp\":\"Modal_animate__bounceInUp__93IeB\",\"bounceInUp\":\"Modal_bounceInUp__HFby5\"};","import { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport css from './Modal.module.css';\n\nconst Modal = ({ onClose }) => {\n  useEffect(() => {\n    window.addEventListener('keydown', event => {\n      if (event.code === 'Escape' || event.target.id === 'Overlay') {\n        onClose();\n      }\n    });\n\n    return window.removeEventListener('keydown', event => {\n      if (event.code === 'Escape') {\n        onClose();\n      }\n    });\n  }, [onClose]);\n\n  const handelCloseModal = event => {\n    if (event.currentTarget === event.target) {\n      onClose();\n    }\n  };\n\n  return (\n    <div className={css.Overlay} id=\"Overlay\" onClick={handelCloseModal}>\n      <div\n        className={`${css.Modal} ${css.animate__animated} ${css.animate__bounceInUp}`}\n      >\n        <ContactForm />\n      </div>\n    </div>\n  );\n};\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default Modal;\n","import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport Modal from '../components/Modal/Modal';\nimport { fetchContacts } from 'redux/operations';\nimport { getError, getIsLoading } from 'redux/selectors';\nimport css from '../components/ContactList/ContactList.module.css';\n\nexport default function Tasks() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const [modal, setModal] = useState(false);\n\n  const toggleModal = () => {\n    setModal(!modal);\n  };\n\n  return (\n    <>\n      {modal && <Modal onClose={toggleModal} />}\n      {isLoading && !error && (\n        <p className={css.text}>Request in progress...</p>\n      )}\n      <ContactList onOpen={toggleModal} />\n    </>\n  );\n}\n"],"names":["Contact","contact","dispatch","useDispatch","tel","number","className","css","name","href","fill","size","onClick","deleteContact","id","getContacts","state","contacts","items","getIsLoading","isLoading","getError","error","getFilters","filters","ContactsFilter","useSelector","type","value","placeholder","onChange","event","filterInput","target","setFilter","required","ContactList","onOpen","visibleContacts","normalizeFilter","toLowerCase","filter","includes","sort","firstContact","secondContact","localeCompare","getFiltredContacts","length","Button","map","ContactForm","onSubmit","preventDefault","form","some","elements","alert","addContact","reset","pattern","title","onClose","useEffect","window","addEventListener","code","removeEventListener","currentTarget","Tasks","fetchContacts","useState","modal","setModal","toggleModal"],"sourceRoot":""}